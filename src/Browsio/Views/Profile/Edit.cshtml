@using Incoding.Extensions
@model EditUserCommand

@using (Html.Browsio().BeginForm(setting =>
                                     {
                                         setting.IsUploadForm = true;
                                         setting.RedirectToSelf = true;
                                         setting.NotificationMessage = "Profile update";                                         
                                     }))
{
    <div class="row">
        <div class="span10 offset1">
            <fieldset>
                <legend>Profile</legend>
                @Html.ForGroup(r => r.FirstName).TextBox()
                @Html.ForGroup(r => r.LastName).TextBox()
                <div class="controls">
                    <label class="radio">
                        @Html.RadioButtonFor(r => r.Sex, SexOfType.Men)
                        Men
                    </label>
                    <label class="radio">
                        @Html.RadioButtonFor(r => r.Sex, SexOfType.Women)
                        Women
                    </label>
                </div>
                @if (Model.HasImage)
                {
                    <div class="controls">
                        <img id="img" src="@Url.Action("Img", "Dispatcher", new { Id = BrowsioApp.UserId, 
                                          Cache = DateTime.Now.Ticks,
                                      Type = SearchItemOfType.User})" alt="Display Picture" class="img-polaroid img-preview" />
                    </div>
                }
                @Html.ForGroup(r => r.DisplayPicture).File()
                <div class="form-actions">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </fieldset>

        </div>
    </div>
}

@{
    string tmplId = Guid.NewGuid().ToString();
    using (var template = Html.Incoding().ScriptTemplate<StoreVm>(tmplId))
    {
    <div class="row">
        <div class="span10 offset1">


            <div class="btn-toolbar">
                <a class="btn btn-primary" href="@Url.Action("Index", "Browsio").SetHash(Url.Action("Add", "Store"))">Add store
                </a>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th class="col-command"></th>
                        <th>Name</th>
                        <th>Category</th>
                        <th>Genre</th>
                        <th class="col-image">Image</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @using (var each = template.ForEach())
                    {
                        <tr>
                            <td class="col-command">
                                @Html.Browsio().ButtonVerb(setting =>
                                                           {
                                                               setting.RedirectToSelf = true;
                                                               setting.Content = "Delete";
                                                               setting.Notification = "Store delete";
                                                               setting.Url = Url.Action("Delete", "Dispatcher", new { Id = each.For(r => r.Id), assemblyType = each.For(r => r.AssemblyQualifiedName) });
                                                           })
                            </td>
                            <td>
                                <a href="@HttpUtility.UrlDecode(Url.Action("Index", "Browsio").SetHash(Url.Action("Edit", "Store", new { Id = each.For(r => r.Id) })))">
                                    @each.For(r => r.Name)
                                </a>
                            </td>
                            <td>@each.For(r => r.Category)</td>
                            <td>@each.For(r => r.Genre)</td>
                            <td class="col-image">
                                <img src="@HttpUtility.UrlDecode(Url.Action("Img", "Dispatcher", new { Id = @each.For(r => r.Id), Cache = DateTime.Now.Ticks, Type=@SearchItemOfType.Store }))" class="img-polaroid img-preview"/>
                            </td>
                            <td>@each.For(r => r.Description)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    }

}


@Html.Browsio().Load(setting =>
                         {
                             setting.Url = Url.Action("Fetch", "Store", new { UserId = BrowsioApp.UserId });
                             setting.Template = Selector.Jquery.Id(tmplId);
                         })